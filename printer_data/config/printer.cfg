[gcode_arcs]

# This file is an example config file for cartesian style printers.
# One may copy and edit this file to configure a new cartesian
# printer.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# See docs/Config_Reference.md for a description of parameters.

[exclude_object]
[include KAMP_Settings.cfg]

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 43200
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[stepper_x]
step_pin: PD6
dir_pin: PD11
enable_pin: !PC6
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC14
position_endstop: 305
position_max: 305
homing_speed: 15.0

[tmc2660 stepper_x]
cs_pin: PD14
spi_bus: usart1
run_current: 1.000
sense_resistor: 0.051

[stepper_y]
step_pin: PD7
dir_pin: !PD12
enable_pin: !PC6
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PA2
position_min: 0
position_endstop: 320
position_max: 320
homing_speed: 15.0

[tmc2660 stepper_y]
cs_pin: PC9
spi_bus: usart1
run_current: 1.000
sense_resistor: 0.051

[stepper_z]
step_pin: PD8
dir_pin: !PD13
enable_pin: !PC6
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^PD29
#endstop_pin: PD10  # E0 endstop
#endstop_pin: PC16  # E1 endstop
#position_endstop: 0.5
position_min: -15
position_max: 400

[tmc2660 stepper_z]
cs_pin: PC10
spi_bus: usart1
run_current: 1.000
sense_resistor: 0.051

[safe_z_home]
home_xy_position: 150, 150
z_hop: 50
;z_offset: 0

[bltouch]
sensor_pin: ^PC1
control_pin: PC3
#z_offset:0
x_offset: -28
y_offset: -15
stow_on_each_sample: false
#adaptive_margin: 5
samples:3

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 10, 25
mesh_max: 269, 285
probe_count: 6, 6
fade_start: 1
fade_end: 10
fade_target: 0

[screws_tilt_adjust]
screw1: 305, 310
screw1_name: rear right screw
screw2: 215, 310
screw2_name: mid rear screw
screw3: 29, 310
screw3_name: rear left screw
screw4: 29, 16
screw4_name: front left screw
screw5: 215, 16
screw5_name: front mid screw
screw6: 305, 16
screw6_name: front right screw
screw7: 305, 175
screw7_name: mid right screw
screw_thread: CCW-M3
horizontal_move_z: 10


[extruder]
step_pin: PD5
dir_pin: PA1
enable_pin: !PC6
microsteps: 16
rotation_distance: 5.586
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: !PA20
sensor_type: PT1000
sensor_pin: PC15
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 300
min_extrude_temp: 175
max_extrude_only_distance: 1000

[tmc2660 extruder]
cs_pin: PC17
spi_bus: usart1
run_current: 0.847 #hemera with safety margin: (1.33 * 0.9) / 1.414 = 0.847 w/o: 0.94
sense_resistor: 0.051

[fan]
#pin: PC26  # FAN1, heatbrake
#pin: PA0 #Fan 2 
pin: PC23 #part fan

[heater_bed]
heater_pin: !PA19
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC13
#control: watermark
min_temp: 0
max_temp: 110

[mcu]
serial: /dev/serial/by-id/usb-Klipper_sam4e8e_00313753314E33383038303536303331-if00

[include mainsail.cfg]

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 25
max_z_accel: 30

[filament_switch_sensor switch_sensor]
switch_pin: PC16
pause_on_runout: False
runout_gcode:
  PAUSE 
  M117 Filament empty
insert_gcode:

[filament_motion_sensor encoder_sensor]
switch_pin: PD10
detection_length: 4
extruder: extruder
pause_on_runout: False
runout_gcode:
  PAUSE
  M117 Filament encoder runout
insert_gcode:

[gcode_macro UERY_FILAMENT_SENSOR]
gcode:
  QUERY_FILAMENT_SENSOR SENSOR=encoder_sensor
  G4 P60000 ; Wait for one minute (60000 milliseconds)
  #RUN_MACRO MACRO=UERY_FILAMENT_SENSOR

[gcode_macro LOAD_FILAMENT]
gcode:
    {% if printer.print_stats.state == "printing" %}
    M104 S230 ; Set extruder temperature only if printing
    M109 S230 ; Wait for extruder to reach temperature only if printing
    {% endif %}
    G1 E100 F300 ; Load filament at desired speed
    ; G1 E-1 F1800 ; Retract 1mm of filament quickly to prevent oozing

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% if printer.print_stats.state == "printing" %}
    M104 S230 ; Set extruder temperature to 230°C only if printing
    M109 S230 ; Wait for extruder to reach 230°C only if printing
    {% endif %}
    G1 E-100 F300 ; Retract 100mm of filament at 5mm/s (300mm/min) to unload


[gcode_macro PANELDUE_BEEP]
# Beep frequency
#default_parameter_FREQUENCY: 300
# Beep duration in seconds
#default_parameter_DURATION: 1.
gcode:
  {action_call_remote_method("paneldue_beep",
                             frequency=FREQUENCY|int,
                             duration=DURATION|float)}

[gcode_macro Bed_Level]
gcode:
  {SCREWS_TILT_CALCULATE}

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 275.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 290.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 50.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode: PAUSE X=250 Y=280 Z_MIN=50

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    # Start heating bed and extruder simultaneously
  
  SET_DISPLAY_TEXT MSG="Heating"          # Displays info
  M140 S{target_bed} ; Start heating the bed to slicer setting without waiting
  M104 S150 ; Start heating the extruder to 150°C without waiting

  # Wait for bed to reach slicer setting before proceeding
  M190 S{target_bed}

  # Check if the extruder is already at or above 150°C
  {% if printer.extruder.temperature < 150 %}
    # If not, wait for the extruder to reach 150°C
    M109 S150
  {% endif %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.210
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.530
#*# pid_ki = 0.971
#*# pid_kd = 1317.054
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.213
#*# pid_ki = 1.182
#*# pid_kd = 86.412
#*#
#*# [bltouch]
#*# z_offset = 1.085
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.111667, 0.108333, 0.073333
#*# 	  0.138333, 0.037500, 0.023333
#*# 	  0.248333, 0.167500, 0.062500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 116.0
#*# max_x = 189.0
#*# min_y = 121.0
#*# max_y = 194.0
